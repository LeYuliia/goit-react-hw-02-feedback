{"version":3,"sources":["components/Section/Section.module.css","components/Statistic/Statistic.module.css","components/FeedbackOptions/FeadbackOptions.module.css","components/Notification/Notification.module.css","components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistic","good","neutral","bad","total","positivePercentage","className","styles","list","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","button","name","onClick","Section","title","children","section","Notification","message","App","state","handleFeedback","event","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,qBCA7DD,EAAOC,QAAU,CAAC,KAAO,0B,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,8LCcbC,EAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAChB,oCACE,0CACA,wBAAIC,UAAWC,IAAOC,MACpB,qCAAWP,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,Q,gBCOSI,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,4BACEC,KAAK,SACLV,UAAWC,IAAOU,OAClBC,KAAMH,EACNA,IAAKA,EACLI,QAASR,GAERI,Q,gBCJMK,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAAShB,UAAWC,IAAOgB,SACzB,wBAAIjB,UAAWC,IAAOc,OAAQA,GAC7BC,I,gBCIUE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oCACE,uBAAGnB,UAAWC,IAAOkB,SAAUA,KCuDpBC,E,4MArDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPyB,eAAiB,SAACC,GAChB,IAAMd,EAAMc,EAAMC,OAAOZ,KACzB,EAAKa,UAAS,SAACJ,GAAD,sBACXZ,EAAMY,EAAMZ,GAAO,O,EAKxBiB,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjB1B,KADiB,EACXC,QADW,EACFC,K,EAKzB8B,gCAAkC,WAChC,OAAOC,KAAKC,MACgC,KAAxC,EAAKR,MAAM1B,KAAO,EAAK0B,MAAMzB,SAAkB,EAAK8B,uB,uDAKxD,IAAML,EAAQS,KAAKT,MACnB,OACE,oCACE,kBAAC,EAAD,CAASN,MAAM,wBACb,kBAAC,EAAD,CACEX,QAAS0B,KAAKT,MACdhB,gBAAiByB,KAAKR,iBAGO,IAA9BQ,KAAKJ,qBACJ,kBAAC,EAAD,CAAcP,QAAQ,sBAEtB,kBAAC,EAAD,CACExB,KAAM0B,EAAM1B,KACZC,QAASyB,EAAMzB,QACfC,IAAKwB,EAAMxB,IACXC,MAAOgC,KAAKJ,qBACZ3B,mBAAoB+B,KAAKH,0C,GA9CrBI,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f6b37589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1tk-Z\",\"title\":\"Section_title__1nKCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistic_list__3385q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeadbackOptions_button__3OXev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3nTND\"};","import React from \"react\";\nimport styles from \"./Statistic.module.css\";\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2>Statistics</h2>\n    <ul className={styles.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feadback: {positivePercentage}%</li>\n    </ul>\n  </>\n);\nexport default Statistic;\n","import React from \"react\";\nimport styles from \"./FeadbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {Object.keys(options).map((key) => (\n      <button\n        type=\"button\"\n        className={styles.button}\n        name={key}\n        key={key}\n        onClick={onLeaveFeedback}\n      >\n        {key}\n      </button>\n    ))}\n  </>\n);\nexport default FeedbackOptions;\n","import React from \"react\";\nimport styles from \"./Section.module.css\";\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from \"react\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <>\n    <p className={styles.message}>{message}</p>\n  </>\n);\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistic from \"./components/Statistic\";\nimport FeadbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // Добавляем +1 к значению отзыва по клику:\n  handleFeedback = (event) => {\n    const key = event.target.name;\n    this.setState((state) => ({\n      [key]: state[key] + 1,\n    }));\n  };\n\n  //Сумируем количество всех отзывов:\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  // Вычисляем процент положительных отзывов от общего числа и приводим значение к целому числу:\n  countPositiveFeedbackPercentage = () => {\n    return Math.round(\n      ((this.state.good + this.state.neutral) * 100) / this.countTotalFeedback()\n    );\n  };\n\n  render() {\n    const state = this.state;\n    return (\n      <>\n        <Section title=\"How was our service?\">\n          <FeadbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleFeedback}\n          />\n\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistic\n              good={state.good}\n              neutral={state.neutral}\n              bad={state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}